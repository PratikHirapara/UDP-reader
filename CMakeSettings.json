{
  "configurations": [
    {
      "name": "Linux-Debug",
      "generator": "Unix Makefiles",
      "configurationType": "Debug",
      "cmakeExecutable": "/usr/bin/cmake",
      "remoteCopySourcesExclusionList": [ ".vs", ".git", "out" ],
      "cmakeCommandArgs": "",
      "buildCommandArgs": "-j 4",
      "ctestCommandArgs": "",
      "inheritEnvironments": [ "linux_x64" ],
      "remoteMachineName": "1017699222;deb11builder (username=ph01, port=22, authentication=Password)",
      "remoteCMakeListsRoot": "$HOME/.vs/${projectDirName}/src",
      "remoteBuildRoot": "$HOME/.vs/${projectDirName}/out/build/${name}",
      "remoteInstallRoot": "$HOME/.vs/${projectDirName}/out/install/${name}",
      "remoteCopySources": true,
      "rsyncCommandArgs": "-t --delete --delete-excluded",
      "remoteCopyBuildOutput": false,
      "remoteCopySourcesMethod": "rsync",
      "addressSanitizerRuntimeFlags": "detect_leaks=0"
    },
    {
      "name": "Linux-Release",
      "generator": "Unix Makefiles",
      "configurationType": "RelWithDebInfo",
      "cmakeExecutable": "/usr/bin/cmake",
      "remoteCopySourcesExclusionList": [ ".vs", ".git", "out" ],
      "cmakeCommandArgs": "",
      "buildCommandArgs": "-j 4",
      "ctestCommandArgs": "",
      "inheritEnvironments": [ "linux_x64" ],
      "remoteMachineName": "-1221452774;deb11builder (username=ph01, port=22, authentication=Password)",
      "remoteCMakeListsRoot": "$HOME/.vs/${projectDirName}/src",
      "remoteBuildRoot": "$HOME/.vs/${projectDirName}/out/build/${name}",
      "remoteInstallRoot": "$HOME/.vs/${projectDirName}/out/install/${name}",
      "remoteCopySources": true,
      "rsyncCommandArgs": "-t --delete --delete-excluded",
      "remoteCopyBuildOutput": false,
      "remoteCopySourcesMethod": "rsync",
      "addressSanitizerRuntimeFlags": "detect_leaks=0"
    },
    {
      "name": "WSL-GCC-Release",
      "generator": "Ninja",
      "configurationType": "RelWithDebInfo",
      "buildRoot": "${projectDir}\\out\\build\\${name}",
      "installRoot": "${projectDir}\\out\\install\\${name}",
      "cmakeExecutable": "cmake",
      "cmakeCommandArgs": "",
      "buildCommandArgs": "",
      "ctestCommandArgs": "",
      "inheritEnvironments": [ "linux_x64" ],
      "wslPath": "C:\\Users\\NF\\AppData\\Local\\Microsoft\\WindowsApps\\ubuntu1804.exe",
      "addressSanitizerRuntimeFlags": "detect_leaks=0"
    },
    {
      "name": "x64-Debug",
      "generator": "Ninja",
      "configurationType": "Debug",
      "inheritEnvironments": [ "msvc_x64_x64" ],
      "buildRoot": "${projectDir}\\out\\build\\${name}",
      "installRoot": "${projectDir}\\out\\install\\${name}",
      "cmakeCommandArgs": "",
      "buildCommandArgs": "-v -j 18",
      "ctestCommandArgs": "",
      "variables": [
        {
          "name": "DEBUG_PRINT_VARS",
          "value": "OFF",
          "type": "BOOL"
        },
        {
          "name": "USE_CONAN",
          "value": "True",
          "type": "BOOL"
        },
        {
          "name": "CONAN_BUILD",
          "value": "missing",
          "type": "STRING"
        },
        {
          "name": "SKIP_CONAN_IMPORT",
          "value": "True",
          "type": "BOOL"
        }
      ]
    },
    {
      "name": "x64-Release",
      "generator": "Ninja",
      "configurationType": "RelWithDebInfo",
      "buildRoot": "${projectDir}\\out\\build\\${name}",
      "installRoot": "${projectDir}\\out\\install\\${name}",
      "cmakeCommandArgs": "",
      "buildCommandArgs": "-v",
      "ctestCommandArgs": "",
      "inheritEnvironments": [ "msvc_x64_x64" ],
      "variables": [
        {
          "name": "USE_CONAN",
          "value": "True",
          "type": "BOOL"
        },
        {
          "name": "CONAN_BUILD",
          "value": "missing",
          "type": "STRING"
        },
        {
          "name": "SKIP_CONAN_IMPORT",
          "value": "True",
          "type": "BOOL"
        }
      ]
    }

  ]
}